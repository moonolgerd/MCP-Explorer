{
  "version": "2.5.1",
  "lastUpdated": "2025-05-29T01:15:00.000Z",
  "totalServers": 22,
  "categories": [
    "Development",
    "Database",
    "AI/ML",
    "Cloud Services",
    "Communication",
    "Productivity",
    "File System",
    "Web Services",
    "Search",
    "DevOps",
    "Automation",
    "Security",
    "Data Science",
    "Finance",
    "Gaming",
    "E-commerce",
    "Social Media",
    "Music & Audio",
    "Design & Graphics",
    "Travel & Maps"
  ],
  "servers": [
    {
      "id": "filesystem-server",
      "name": "Filesystem Server",
      "description": "Secure file operations with configurable access controls. Read/write files, create/list/delete directories, move files, search files, and get metadata.",
      "version": "1.0.0",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "File System",
      "tags": [
        "filesystem",
        "files",
        "directories",
        "official",
        "reference"
      ],
      "installCommand": "npx @modelcontextprotocol/server-filesystem",
      "dockerCommand": "docker run -i --rm --mount type=bind,src=/path/to/dir,dst=/projects mcp/filesystem",
      "features": [
        "file read/write",
        "directory operations",
        "file search",
        "metadata access",
        "secure sandboxing"
      ],
      "requirements": {
        "node": ">=18.0.0"
      }
    },
    {
      "id": "memory-server",
      "name": "Memory Server",
      "description": "Knowledge graph-based persistent memory system. Create entities, relationships, and observations for cross-conversation memory.",
      "version": "0.6.3",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "AI/ML",
      "tags": [
        "memory",
        "knowledge-graph",
        "persistence",
        "official",
        "reference",
        "entities"
      ],
      "installCommand": "npx @modelcontextprotocol/server-memory",
      "features": [
        "entity creation",
        "relationship mapping",
        "persistent memory",
        "graph search",
        "observation tracking"
      ],
      "requirements": {
        "node": ">=18.0.0"
      }
    },
    {
      "id": "git-server",
      "name": "Git Server",
      "description": "Tools to read, search, and manipulate Git repositories. Access commit history, file contents, and repository metadata.",
      "version": "1.0.0",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "Development",
      "tags": [
        "git",
        "version-control",
        "repositories",
        "official",
        "reference"
      ],
      "installCommand": "uvx mcp-server-git --repository /path/to/repo",
      "features": [
        "commit history",
        "file content access",
        "branch management",
        "repository search"
      ],
      "requirements": {
        "python": ">=3.8"
      }
    },
    {
      "id": "fetch-server",
      "name": "Fetch Server",
      "description": "Web content fetching and conversion for efficient LLM usage. Convert HTML to markdown, extract text, and handle various content types.",
      "version": "1.0.0",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "Web Services",
      "tags": [
        "fetch",
        "web",
        "html",
        "markdown",
        "official",
        "reference"
      ],
      "installCommand": "npx @modelcontextprotocol/server-fetch",
      "features": [
        "HTML to markdown",
        "text extraction",
        "content conversion",
        "flexible fetching"
      ],
      "requirements": {
        "node": ">=18.0.0"
      }
    },
    {
      "id": "time-server",
      "name": "Time Server",
      "description": "Time and timezone conversion capabilities. Get current time, convert between timezones, and format dates.",
      "version": "1.0.0",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "Productivity",
      "tags": [
        "time",
        "timezone",
        "date",
        "official",
        "reference"
      ],
      "installCommand": "npx @modelcontextprotocol/server-time",
      "features": [
        "current time",
        "timezone conversion",
        "date formatting",
        "time calculations"
      ],
      "requirements": {
        "node": ">=18.0.0"
      }
    },
    {
      "id": "everything-server",
      "name": "Everything Server",
      "description": "Reference test server demonstrating all MCP features. Includes prompts, tools, resources, and sampling capabilities.",
      "version": "1.0.0",
      "author": "Model Context Protocol Team",
      "homepage": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "category": "Development",
      "tags": [
        "reference",
        "test",
        "demo",
        "official",
        "prompts",
        "tools",
        "resources"
      ],
      "installCommand": "npx @modelcontextprotocol/server-everything",
      "features": [
        "all MCP features",
        "prompts",
        "tools",
        "resources",
        "sampling",
        "testing"
      ],
      "requirements": {
        "node": ">=18.0.0"
      }
    },
    {
      "id": "docker-server",
      "name": "Docker Server",
      "description": "Manage Docker containers, images, volumes, and networks",
      "version": "1.5.0",
      "author": "ckreiling",
      "homepage": "https://github.com/ckreiling/mcp-server-docker",
      "repository": "https://github.com/ckreiling/mcp-server-docker",
      "category": "DevOps",
      "tags": [
        "docker",
        "containers",
        "images",
        "deployment"
      ],
      "installCommand": "npm install mcp-server-docker",
      "features": [
        "container management",
        "image operations",
        "volume handling",
        "network configuration"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "system": [
          "docker"
        ]
      }
    },
    {
      "id": "kubernetes-server",
      "name": "Kubernetes Server",
      "description": "Connect to Kubernetes cluster and manage pods, deployments, and services",
      "version": "1.0.0",
      "author": "Flux159",
      "homepage": "https://github.com/Flux159/mcp-server-kubernetes",
      "repository": "https://github.com/Flux159/mcp-server-kubernetes",
      "category": "DevOps",
      "tags": [
        "kubernetes",
        "k8s",
        "pods",
        "deployments",
        "services"
      ],
      "installCommand": "npm install mcp-server-kubernetes",
      "features": [
        "pod management",
        "deployment control",
        "service configuration",
        "cluster monitoring"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "system": [
          "kubectl"
        ]
      }
    },
    {
      "id": "aws-server",
      "name": "AWS Server",
      "description": "Perform operations on your AWS resources using an LLM",
      "version": "1.0.0",
      "author": "rishikavikondala",
      "homepage": "https://github.com/rishikavikondala/mcp-server-aws",
      "repository": "https://github.com/rishikavikondala/mcp-server-aws",
      "category": "Cloud Services",
      "tags": [
        "aws",
        "cloud",
        "amazon",
        "infrastructure"
      ],
      "installCommand": "npm install mcp-server-aws",
      "features": [
        "resource management",
        "service control",
        "infrastructure automation",
        "cost monitoring"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "environment": {
          "AWS_ACCESS_KEY_ID": "required",
          "AWS_SECRET_ACCESS_KEY": "required"
        }
      }
    },
    {
      "id": "azure-devops-server",
      "name": "Azure DevOps Server",
      "description": "An MCP server that provides a bridge to Azure DevOps services, enabling AI assistants to query and manage work items",
      "version": "1.0.0",
      "author": "Vortiago",
      "homepage": "https://github.com/Vortiago/mcp-azure-devops",
      "repository": "https://github.com/Vortiago/mcp-azure-devops",
      "category": "Development",
      "tags": [
        "azure",
        "devops",
        "work-items",
        "microsoft"
      ],
      "installCommand": "npm install mcp-azure-devops",
      "features": [
        "work item management",
        "project tracking",
        "build integration",
        "release management"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "environment": {
          "AZURE_DEVOPS_PAT": "required",
          "AZURE_DEVOPS_ORG": "required"
        }
      }
    },
    {
      "id": "notion-server",
      "name": "Notion Server",
      "description": "Interact with Notion API. Search, read, update, and create pages through Claude chat or other MCP clients.",
      "version": "1.0.0",
      "author": "makenotion",
      "homepage": "https://github.com/makenotion/notion-mcp-server#readme",
      "repository": "https://github.com/makenotion/notion-mcp-server",
      "category": "Productivity",
      "tags": [
        "notion",
        "productivity",
        "notes",
        "official"
      ],
      "installCommand": "npm install notion-mcp-server",
      "features": [
        "page search",
        "page creation",
        "update pages",
        "read content"
      ],
      "requirements": {
        "node": ">=16.0.0"
      }
    },
    {
      "id": "slack-server",
      "name": "Slack Server",
      "description": "Powerful MCP server for Slack Workspaces. Supports Stdio and SSE transports, proxy settings, and does not require workspace admin permissions.",
      "version": "1.0.0",
      "author": "korotovsky",
      "homepage": "https://github.com/korotovsky/slack-mcp-server",
      "repository": "https://github.com/korotovsky/slack-mcp-server",
      "category": "Communication",
      "tags": [
        "slack",
        "chat",
        "messaging",
        "community"
      ],
      "installCommand": "npm install slack-mcp-server",
      "features": [
        "channel management",
        "messaging",
        "proxy support"
      ],
      "requirements": {
        "node": ">=16.0.0"
      }
    },
    {
      "id": "stripe-server",
      "name": "Stripe Server",
      "description": "Integration with Stripe for handling payments, customers, and refunds.",
      "version": "1.0.0",
      "author": "atharvagupta2003",
      "homepage": "https://github.com/atharvagupta2003/mcp-stripe",
      "repository": "https://github.com/atharvagupta2003/mcp-stripe",
      "category": "Finance",
      "tags": [
        "stripe",
        "payments",
        "finance",
        "community"
      ],
      "installCommand": "npm install mcp-stripe",
      "features": [
        "payment processing",
        "customer management",
        "refunds"
      ],
      "requirements": {
        "node": ">=16.0.0"
      }
    },
    {
      "id": "docker-server-alt",
      "name": "Docker Server (Community)",
      "description": "Integrate with Docker to manage containers, images, volumes, and networks.",
      "version": "1.0.0",
      "author": "ckreiling",
      "homepage": "https://github.com/ckreiling/mcp-server-docker",
      "repository": "https://github.com/ckreiling/mcp-server-docker",
      "category": "DevOps",
      "tags": [
        "docker",
        "containers",
        "community"
      ],
      "installCommand": "npm install mcp-server-docker",
      "features": [
        "container management",
        "image operations",
        "volume handling",
        "network configuration"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "system": [
          "docker"
        ]
      }
    },
    {
      "id": "kubernetes-server-alt",
      "name": "Kubernetes Server (Community)",
      "description": "Connect to Kubernetes cluster and manage pods, deployments, and services.",
      "version": "1.0.0",
      "author": "Flux159",
      "homepage": "https://github.com/Flux159/mcp-server-kubernetes",
      "repository": "https://github.com/Flux159/mcp-server-kubernetes",
      "category": "DevOps",
      "tags": [
        "kubernetes",
        "k8s",
        "community"
      ],
      "installCommand": "npm install mcp-server-kubernetes",
      "features": [
        "pod management",
        "deployment control",
        "service configuration",
        "cluster monitoring"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "system": [
          "kubectl"
        ]
      }
    },
    {
      "id": "figma-server",
      "name": "Framelink Figma MCP Server",
      "description": "MCP server to provide Figma layout information to AI coding agents like Cursor. Enables one-shot design implementation by providing direct access to Figma file data.",
      "version": "0.3.1",
      "author": "GLips",
      "homepage": "https://github.com/GLips/Figma-Context-MCP",
      "repository": "https://github.com/GLips/Figma-Context-MCP",
      "category": "Design & Graphics",
      "tags": [
        "figma",
        "design",
        "graphics",
        "mcp",
        "ai",
        "cursor",
        "community"
      ],
      "installCommand": "npm install figma-developer-mcp",
      "features": [
        "Figma file data access",
        "one-shot design implementation",
        "layout and style extraction",
        "AI coding agent integration"
      ],
      "requirements": {
        "node": ">=16.0.0",
        "environment": {
          "FIGMA_API_KEY": "required"
        }
      }
    },
    {
      "id": "airtable-server",
      "name": "Airtable Server",
      "description": "Read and write access to Airtable databases, with schema inspection.",
      "version": "1.0.0",
      "author": "domdomegg",
      "homepage": "https://github.com/domdomegg/airtable-mcp-server",
      "repository": "https://github.com/domdomegg/airtable-mcp-server",
      "category": "Database",
      "tags": ["airtable", "database", "community"],
      "installCommand": "npm install airtable-mcp-server",
      "features": ["read access", "write access", "schema inspection"],
      "requirements": {"node": ">=16.0.0"}
    },
    {
      "id": "jira-server",
      "name": "Jira Server",
      "description": "Interact with Jira Cloud for issue and project management.",
      "version": "1.0.0",
      "author": "community",
      "homepage": "https://github.com/sooperset/mcp-atlassian",
      "repository": "https://github.com/sooperset/mcp-atlassian",
      "category": "Productivity",
      "tags": ["jira", "issues", "project management", "community"],
      "installCommand": "npm install mcp-atlassian",
      "features": ["issue management", "project management"],
      "requirements": {"node": ">=16.0.0"}
    },
    {
      "id": "google-sheets-server",
      "name": "Google Sheets Server",
      "description": "Access and edit data in your Google Sheets.",
      "version": "1.0.0",
      "author": "xing5",
      "homepage": "https://github.com/xing5/mcp-google-sheets",
      "repository": "https://github.com/xing5/mcp-google-sheets",
      "category": "Productivity",
      "tags": ["google sheets", "sheets", "spreadsheet", "community"],
      "installCommand": "npm install mcp-google-sheets",
      "features": ["data access", "data editing"],
      "requirements": {"node": ">=16.0.0"}
    },
    {
      "id": "monday-server",
      "name": "Monday.com Server",
      "description": "Interact with Monday.com boards and items.",
      "version": "1.0.0",
      "author": "sakce",
      "homepage": "https://github.com/sakce/mcp-server-monday",
      "repository": "https://github.com/sakce/mcp-server-monday",
      "category": "Productivity",
      "tags": ["monday.com", "boards", "tasks", "community"],
      "installCommand": "npm install mcp-server-monday",
      "features": ["board management", "item management"],
      "requirements": {"node": ">=16.0.0"}
    },
    {
      "id": "google-calendar-server",
      "name": "Google Calendar Server",
      "description": "Integration with Google Calendar to check schedules, find time, and add/delete events.",
      "version": "1.0.0",
      "author": "v-3",
      "homepage": "https://github.com/v-3/google-calendar",
      "repository": "https://github.com/v-3/google-calendar",
      "category": "Productivity",
      "tags": ["google calendar", "calendar", "events", "community"],
      "installCommand": "npm install google-calendar-mcp-server",
      "features": ["event management", "schedule checking"],
      "requirements": {"node": ">=16.0.0"}
    },
    {
      "id": "jira-server-alt",
      "name": "Jira Server (alt)",
      "description": "Interact with Jira Cloud for issue and project management (alt implementation).",
      "version": "1.0.0",
      "author": "sooperset",
      "homepage": "https://github.com/sooperset/mcp-atlassian",
      "repository": "https://github.com/sooperset/mcp-atlassian",
      "category": "Productivity",
      "tags": ["jira", "issues", "project management", "community"],
      "installCommand": "npm install mcp-atlassian",
      "features": ["issue management", "project management"],
      "requirements": {"node": ">=16.0.0"}
    }
  ]
}